{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Notification","message","className","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","blogService","token","setTimeout","useEffect","loggedUserJSON","getItem","parse","onSubmit","type","value","name","onChange","target","onClick","clear","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,SCWRC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,SACZD,I,gBCmBQ,EAVA,WAEb,OADgBE,IAAMC,IAlBR,cAmBCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EAvBE,SAAAC,GACV,iBAAaA,ICEL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWR,IAAMS,KAHf,aAG6BF,GAD/B,cACNJ,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCoGIM,EAjGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIQN,mBAAS,MAJjB,mBAITO,EAJS,KAIHC,EAJG,OAKwBR,mBAAS,MALjC,mBAKTS,EALS,KAKKC,EALL,KAOVC,EAAW,uCAAG,WAAOC,GAAP,eAAAf,EAAA,6DAClBe,EAAMC,iBADY,kBAGGC,EAAanB,MAAM,CACpCQ,WAAUE,aAJI,OAGVE,EAHU,OAMhBQ,OAAOC,aAAaC,QAClB,oBAAqBC,KAAKC,UAAUZ,IAGtCa,EAAqBb,EAAKc,OAC1Bb,EAAQD,GACRH,EAAY,IACZE,EAAY,IAbI,kDAehBI,EAAgB,qBAChBY,YAAW,WACTZ,EAAgB,QACf,KAlBa,0DAAH,sDAuBjBa,qBAAU,WACRH,IAAqB7B,MAAK,SAAAU,GAAK,OAC7BC,EAAUD,QAEX,IAEHsB,qBAAU,WACR,IAAMC,EAAiBT,OAAOC,aAAaS,QAAQ,qBACnD,GAAID,EAAgB,CAClB,IAAMjB,EAAOW,KAAKQ,MAAMF,GACxBhB,EAAQD,GACRa,EAAqBb,EAAKc,UAE3B,IAiCH,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAclC,QAASsB,IAEb,OAATF,EAnCH,0BAAMoB,SAAUhB,GACd,wCAEI,2BACAiB,KAAK,OACLC,MAAO1B,EACP2B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5B,EAAY4B,EAAOH,WAGjD,wCAEI,2BACAD,KAAK,WACLC,MAAOxB,EACPyB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAY0B,EAAOH,WAGjD,4BAAQD,KAAK,UAAb,UAkBE,6BACE,2BAAIrB,EAAKuB,KAAT,eAGJ,4BAAQG,QAlBS,SAAArB,GACnBA,EAAMC,iBACNE,OAAOC,aAAakB,QACpB1B,EAAQ,QAeN,WAECP,EAAMkC,KAAI,SAAApD,GAAI,OACb,kBAAC,EAAD,CAAMqD,IAAKrD,EAAKsD,GAAItD,KAAMA,SC7FlCuD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.389fdfca.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, setToken, update }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const handleLogout = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  }\n  \n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n        </div>\n      }\n      <button onClick={handleLogout}> logout</button>\n\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}