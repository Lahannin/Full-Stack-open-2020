{"version":3,"sources":["services/blogs.js","components/Blog.js","components/BlogForm.js","components/Notification.js","services/login.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","id","put","remove","delete","request","Blog","blog","blogService","blogs","user","reorderBlogs","useState","blogInfo","setBlogInfo","visibleInfo","display","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","url","likes","blogsService","map","oldBlog","name","username","window","confirm","filter","x","BlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","type","value","onChange","target","Notification","message","login","credentials","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","setBlogs","setUsername","password","setPassword","setUser","errorMessage","setErrorMessage","setStyle","blogFormRef","createRef","handleLogin","loginService","localStorage","setItem","JSON","stringify","setTimeout","useEffect","loggedUserJSON","getItem","parse","addBlog","blogObject","current","returnedBlog","concat","catch","error","console","log","sortBlogs","sortedBlogs","sort","b","clear","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.252126bc.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  return request.data\n}\n\n\nexport default { getAll, create, setToken, update, remove }","import React, { useState } from 'react'\nimport blogsService from '../services/blogs'\nimport PropTypes from 'prop-types'\n\n\nconst Blog = ({ blog, blogService, blogs, user, reorderBlogs }) => {\n  const [blogInfo, setBlogInfo] = useState(false)\n  const visibleInfo = { display: blogInfo ? '' : 'none' }\n\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n\n  const handleLikeClick = () => {\n    blog.likes++\n    blogsService.update(blog.id, blog)\n\n    reorderBlogs(\n      blogs.map(oldBlog => (oldBlog.id === blog.id ? blog : oldBlog))\n    )\n  }\n\n\n  const handleRemoveClick = () => {\n    const popup = window.confirm(`remove blog ${blog.title} by ${blog.author}?`)\n    if (popup) {\n      blogService.remove(blog.id)\n      reorderBlogs(blogs.filter(x => x.id !== blog.id))\n    }\n  }\n\n\n  return (\n    <div style={blogStyle} className=\"title\">\n      {blog.title} {blog.author}\n      <button onClick={() => setBlogInfo(!blogInfo)}>view</button>\n      {blogInfo ? (\n        <div style={visibleInfo} className=\"fullInfo\">\n          <p>URL: {blog.url}</p>\n          <p>Likes: {blog.likes} <button onClick={() => handleLikeClick()}>like</button>\n          </p>\n          <p>Added by {blog.user && blog.user.name} </p>\n          {user.username === (blog.user && blog.user.username) ? (\n            <button onClick={handleRemoveClick}>remove</button>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  blogService: PropTypes.object.isRequired,\n  blogs: PropTypes.array.isRequired,\n  reorderBlogs: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n}\n\n\nexport default Blog\n","import React, { useState } from 'react'\n\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n\n  const addBlog = event => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url\n    })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n\n  return (\n    <div>\n      <h2>Create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n        title\n          <input\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n        author\n          <input\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n        url\n          <input\n            type=\"text\"\n            value={url}\n            name=\"Url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default BlogForm","import React from 'react'\n\n\nconst Notification = ({ message, style }) => {\n  if (message === null) {\n    return null\n  }\n\n\n  return (\n    <div className={style}>\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n\nexport default { login }","import React, { useState, useImperativeHandle } from 'react'\n\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\n\nTogglable.displayName = 'Togglable'\n\n\nexport default Togglable","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Togglable from './components/Togglable'\nimport './index.css'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [style, setStyle] = useState('')\n  const blogFormRef = React.createRef()\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong username or password')\n      setStyle('red')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n\n  const handleLogout = event => {\n    event.preventDefault()\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n      }).catch(error => {\n        setErrorMessage('Blog was not added. ' + error.response.data.error)\n        console.log(error.response.data)\n        setStyle('red')\n      })\n\n    setErrorMessage(\n      `a new blog ${blogObject.title} by ${blogObject.author} added`\n    )\n    setStyle('green')\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n\n  const sortBlogs = sortedBlogs => {\n    setBlogs(sortedBlogs.sort((a, b) => b.likes - a.likes))\n  }\n\n\n  useEffect(() => {\n    blogService.getAll().then(response => {\n      sortBlogs(response)\n    })\n  }, [])\n\n\n  const showBlogs = () => (\n    <div>\n      {blogs.map(blog => (\n        <Blog\n          key={blog.id}\n          blog={blog}\n          blogService={blogService}\n          blogs={blogs}\n          reorderBlogs={sortBlogs}\n          user={user}\n        />\n      ))}\n    </div>\n  )\n\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={errorMessage} style={style}/>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in\n            <button onClick={handleLogout}> logout</button>\n          </p>\n          {blogForm()}\n          {showBlogs()}\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}